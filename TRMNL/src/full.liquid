<style>
  @import url('https://cdn.jsdelivr.net/npm/@mdi/font/css/materialdesignicons.min.css');
  .trmnl .view--half_vertical::before {
    background: none;
  }
  .sensor-value {
    font-weight: 600 !important;
  }
</style>
<div class="mashup mashup--1Lx1R">
  <div class="layout">
    <div id="co2-gauge"></div>
  </div>
  <div class="layout">
    <div class="grid grid--cols-2">
      {% for entity in entities %}
      {% if entity.type != 'co2_primary' %}
      {% if entity.i and entity.i != blank %}
      {% assign entity_icon = entity.i | replace: ':', '-' %}
      {% else %}
      {% assign entity_icon = 'mdi-gauge' %}
      {% for icon_pair in icon_map %}
      {% assign icon_data = icon_pair | split: ':' %}
      {% if icon_data[0] == entity.device_class %}
      {% assign entity_icon = icon_data[1] %}
      {% break %}
      {% endif %}
      {% endfor %}
      {% endif %}
      <div class="item pb--8">
        <span class="label">
          <span class="weather-icon mdi {{ entity_icon }}" />
            {{ entity.n }}
          </span>
          <div class="content">
            <span class="value value--tnums sensor-value" data-value-fit="true">
              {%- if entity.val == "unavailable" -%}
              -
              {%- else -%}
              {{- entity.val -}}{{- entity.u -}}
              {%- endif -%}
            </span>
          </div>
      </div>
      {% endif %}
      {% endfor %}
    </div>
  </div>
</div>

<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/highcharts-more.js"></script>
<script src="https://code.highcharts.com/modules/pattern-fill.js"></script>
<script type="text/javascript">
    // CO2 level in ppm
  var co2Level = 1200;

  function co2Rating(level) {
    if (level < 800) {
      return "Excellent";
    } else if (level < 1000) {
      return "Good";
    } else if (level < 1500) {
      return "Fair";
    } else {
      return "Poor";
    }
  }

  function createSimpleCO2Gauge(level, height) {
    Highcharts.chart('co2-gauge', {
      chart: {
        type: "gauge",
        height: height,
        width: height
      },
      title: {
        text: null
      },
      pane: {
        startAngle: -150,
        endAngle: 150,
        background: {
          backgroundColor: "transparent",
          borderWidth: 0
        }
      },
      plotOptions: {
        gauge: {
          animation: false,
          pivot: {
            backgroundColor: "transparent"
          },
          dial: {
            backgroundColor: "transparent",
            baseWidth: 0,
          },
        }
      },
      yAxis: {
        min: 400,
        max: 2000,
        minorTickInterval: 0,
        tickColor: "#ffffff",
        tickLength: 0,
        tickWidth: 0,
        lineWidth: 0,
        title: {
          text: null
        },
        labels: {
          enabled: false
        },
        plotBands: [
          {
            from: 400,
            to: 2000,
            color: {
              pattern: {
                image: "https://usetrmnl.com/images/grayscale/gray-4.png",
                width: 8,
                height: 8
              }
            },
            innerRadius: '85%',
            borderRadius: '50%'
          },
          {
            from: 400,
            to: level,
            color: '#000000',
            innerRadius: "85%",
            borderRadius: "50%"
          }
        ]
      },
      series: [{
        name: "CO₂",
        data: [level],
        dataLabels: {
          format: '{point.y} ppm<br/>' + co2Rating(level),
          borderWidth: 0,
          style: {
            fontSize: "16px",
            textAlign: "center"
          },
          y: -25
        }
      }],
      credits: {
        enabled: false
      }
    });
  }

  function createCO2Gauge(level, maxWidth) {
    Highcharts.chart('co2-gauge', {
      chart: {
        type: "gauge",
        width: maxWidth
      },
      title: {
        text: null
      },

      pane: {
        startAngle: -150,
        endAngle: 150,
        background: {
          backgroundColor: "transparent",
          borderWidth: 0
        }
      },
      plotOptions: {
        gauge: {
          animation: false,
          pivot: {
            backgroundColor: "transparent"
          },
          dial: {
            backgroundColor: "transparent",
            baseWidth: 0,
          },
        }
      },
      yAxis: {
        min: 400,
        max: 2000,
        minorTickInterval: 0,
        tickColor: "#ffffff",
        tickLength: 40,
        tickPixelInterval: 40,
        tickWidth: 0,
        tickPositions: [400, 800, 1200, 1600, 2000],
        lineWidth: 0,
        title: {
          text: null
        },
        title: {
          text: co2Rating(level),
          style: {
            color: "#000000",
            fontSize: "22px"
          }
        },
        labels: {
          distance: 24,
          style: {
            fontSize: "17px"
          }
        },
        plotBands: [
          {
            from: 400,
            to: 2000,
            color: {
              pattern: {
                image: "https://usetrmnl.com/images/grayscale/gray-5.png",
                width: 12,
                height: 12
              }
            },
            innerRadius: '82%',
            borderRadius: '50%'
          },
          {
            from: 400,
            to: level,
            color: '#000000',
            innerRadius: "82%",
            borderRadius: "50%"
          }
        ]
      },
      series: [{
        name: "CO₂",
        data: [level],
        dataLabels: {
          format: '{point.y} ppm',
          borderWidth: 0,
          style: {
            fontSize: "32px",
          },
          y: -20
        }
      }],
      credits: {
        enabled: false
      }
    });
  }

  createCO2Gauge({{co2_value}});
</script>
